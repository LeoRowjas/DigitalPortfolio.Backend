// <auto-generated />
using System;
using System.Collections.Generic;
using DigitalPortfolio.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DigitalPortfolio.API.Migrations
{
    [DbContext(typeof(DigitalPortfolioDbContext))]
    [Migration("20240620063215_Fix")]
    partial class Fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DigitalPortfolio.API.Models.AchievementModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("IconSVG")
                        .HasColumnType("text");

                    b.Property<string>("OwnerUsername")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Achievement");
                });

            modelBuilder.Entity("DigitalPortfolio.API.Models.LikeModel", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("OwnerUsername")
                        .HasColumnType("text");

                    b.Property<string>("UserProfileModelUsername")
                        .HasColumnType("text");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserProfileModelUsername");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("DigitalPortfolio.API.Models.ProjectModel", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LikesCount")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DigitalPortfolio.API.Models.UserProfileModel", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<List<Guid>>("Achievements")
                        .HasColumnType("uuid[]");

                    b.Property<string>("Biography")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<List<Guid>>("Projects")
                        .HasColumnType("uuid[]");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DigitalPortfolio.API.Models.LikeModel", b =>
                {
                    b.HasOne("DigitalPortfolio.API.Models.UserProfileModel", null)
                        .WithMany("Likes")
                        .HasForeignKey("UserProfileModelUsername");
                });

            modelBuilder.Entity("DigitalPortfolio.API.Models.UserProfileModel", b =>
                {
                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
